<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wh.dao.UserDao">

    <resultMap type="com.wh.entity.User" id="UserMap">
        <result property="uId" column="u_id" jdbcType="INTEGER"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="province" column="province" jdbcType="VARCHAR"/>
        <result property="city" column="city" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="INTEGER"/>
        <result property="isRegister" column="is_register" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询数量-->
    <select id="queryCount" resultType="integer">
        select count(u_id) from user
    </select>

    <!--全局模糊搜索-->
    <select id="selectAllByCondition" resultMap="UserMap">
        SELECT * FROM `user`
        WHERE
        CONCAT(IFNULL(`u_id`,''),IFNULL(`nick_name`,''),IFNULL(`province`,''),IFNULL(`city`,''))
        LIKE CONCAT("%",#{keywords},"%")
    </select>

    <!--查询单个按照微信id查-->
    <select id="queryByOpenid" resultMap="UserMap">
        select
          u_id, openid, nick_name, avatar_url, gender, province, city, role,is_register
        from driver.user
        where openid = #{openid}
    </select>


    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          u_id, openid, nick_name, avatar_url, gender, province, city, role,is_register
        from driver.user
        where u_id = #{uId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAll" resultMap="UserMap">
        select
          u_id, openid, nick_name, avatar_url, gender, province, city, role,is_register
        from driver.user
    </select>

    <!--通过实体作为筛选条件查询-->
<!--    <select id="queryAll" resultMap="UserMap">-->
<!--        select-->
<!--        u_id, openid, nick_name, avatar_url, gender, province, city, role-->
<!--        from driver.user-->
<!--        <where>-->
<!--            <if test="uId != null">-->
<!--                and u_id = #{uId}-->
<!--            </if>-->
<!--            <if test="openid != null and openid != ''">-->
<!--                and openid = #{openid}-->
<!--            </if>-->
<!--            <if test="nickName != null and nickName != ''">-->
<!--                and nick_name = #{nickName}-->
<!--            </if>-->
<!--            <if test="avatarUrl != null and avatarUrl != ''">-->
<!--                and avatar_url = #{avatarUrl}-->
<!--            </if>-->
<!--            <if test="gender != null">-->
<!--                and gender = #{gender}-->
<!--            </if>-->
<!--            <if test="province != null and province != ''">-->
<!--                and province = #{province}-->
<!--            </if>-->
<!--            <if test="city != null and city != ''">-->
<!--                and city = #{city}-->
<!--            </if>-->
<!--            <if test="role != null">-->
<!--                and role = #{role}-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->

    <!--新增所有列-->
    <insert id="insert" keyProperty="uId" useGeneratedKeys="true">
        insert into driver.user(openid, nick_name, avatar_url, gender, province, city, role,is_register)
        values (#{openid}, #{nickName}, #{avatarUrl}, #{gender}, #{province}, #{city}, #{role}, #{isRegister})
    </insert>

    <insert id="insertBatch" keyProperty="uId" useGeneratedKeys="true">
        insert into driver.user(openid, nick_name, avatar_url, gender, province, city, role,is_register)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.openid}, #{entity.nickName}, #{entity.avatarUrl}, #{entity.gender}, #{entity.province},
            #{entity.city}, #{entity.role}, #{isRegister})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="uId" useGeneratedKeys="true">
        insert into driver.user(openid, nick_name, avatar_url, gender, province, city, role,is_register)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.openid}, #{entity.nickName}, #{entity.avatarUrl}, #{entity.gender}, #{entity.province},
            #{entity.city}, #{entity.role}, #{isRegister})
        </foreach>
        on duplicate key update
        openid = values(openid) , nick_name = values(nick_name) , avatar_url = values(avatar_url) , gender =
        values(gender) , province = values(province) , city = values(city) , role = values(role), is_register=values (is_register)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update driver.user
        <set>
            <if test="openid != null and openid != ''">
                openid = #{openid},
            </if>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="avatarUrl != null and avatarUrl != ''">
                avatar_url = #{avatarUrl},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="province != null and province != ''">
                province = #{province},
            </if>
            <if test="city != null and city != ''">
                city = #{city},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="isRegister != null">
                is_register = #{isRegister},
            </if>
        </set>
        where u_id = #{uId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from driver.user where u_id = #{uId}
    </delete>

</mapper>

